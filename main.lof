\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax 
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {1.1}{\ignorespaces Architecture of the system depicting the interaction between components.}}{4}{figure.1.1}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {1.2}{\ignorespaces Simplified view of a partitioned topic being written to by multiple producers\autocite {ApacheKafka}. In this report there will be just one producer, the Debezium Kafka Connect instance.}}{8}{figure.1.2}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {1.3}{\ignorespaces Operator control loop based on the Kubernetes \emph {Observe, Act, Analyze} control loop. Sourced from \autocite {KubernetesOperatorStateful2021}.}}{9}{figure.1.3}%
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.1}{\ignorespaces Transactions API Dockerfile}}{10}{figure.2.1}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.2}{\ignorespaces Running the build script to generate the new Debezium friendly PostGres docker image}}{12}{figure.2.2}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.3}{\ignorespaces The initial and re-tagged PostGres friendly image.}}{12}{figure.2.3}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.4}{\ignorespaces The deployment Makefile}}{13}{figure.2.4}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.5}{\ignorespaces The Kubernetes Secret resource to be applied to the cluster with the real values altered.}}{14}{figure.2.5}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.6}{\ignorespaces Kubectl showing the secrets available in the cluster. \newline \textbf {Note:} The secrets of type `Opaque' are user defined secrets. Also note that on this system \color@box {}{light-gray}{\texttt {kubectl}} has long been aliased to \color@box {}{light-gray}{\texttt {kube}}.}}{14}{figure.2.6}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.7}{\ignorespaces Manifest provisioning a persistent volume of size 5 GB which will be used for the PostGres database.}}{15}{figure.2.7}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.8}{\ignorespaces Manifest binding the persistent volume to the PostGres database.}}{15}{figure.2.8}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.9}{\ignorespaces PostGres deployment manifest. The yellow `warning' lines courtesy of VS Code, come from the Kubernetes extension. The warning is a result of not setting a resource limit on the deployment. As it is not yet known what kind of resources the deployment will require this warning will be ignored.}}{16}{figure.2.9}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.10}{\ignorespaces PostGres service manifest.}}{17}{figure.2.10}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.11}{\ignorespaces Logs for the API container displays migrations to the database. This shows the two containers are communicating and behaving nominally.}}{18}{figure.2.11}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.12}{\ignorespaces Helm successfully deploys the Strimzi Kafka Operator which in turn deploys the Kafka components.}}{18}{figure.2.12}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.13}{\ignorespaces Kafka Connect Custom Resource Definition manifest.}}{19}{figure.2.13}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.14}{\ignorespaces Debezium PostGres Connector definition manifest.}}{20}{figure.2.14}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.15}{\ignorespaces Kafka cluster information managed by the Kafka Entity Operator. This is the operator that manages both topics and users and the operator itself is deployed and managed by the Strimzi operator.}}{21}{figure.2.15}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.16}{\ignorespaces The API's exposed URL via the service that was configured previously.}}{22}{figure.2.16}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.17}{\ignorespaces Testing the endpoint with Postman. The response can be observed.}}{22}{figure.2.17}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.18}{\ignorespaces The data is streamed to the consumer via Debezium and the Kafka components.}}{23}{figure.2.18}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.19}{\ignorespaces Proof of the newly created beer in the Kafka \color@box {}{light-gray}{\texttt {beers}} topic}}{24}{figure.2.19}%
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {4.1}{\ignorespaces Kafka Connect Custom Resource Definition manifest.}}{28}{figure.4.1}%
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {4.2}{\ignorespaces docker-compose used in the initial testing of the API and PostGres deployment.}}{29}{figure.4.2}%
